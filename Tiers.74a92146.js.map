{"mappings":"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","sources":["web/pages/Admin/Tiers.tsx"],"sourcesContent":["import { A, useParams } from '@solidjs/router'\r\nimport { Component, Show, createMemo, createSignal, onMount } from 'solid-js'\r\nimport { adminStore, settingStore, toastStore, userStore } from '/web/store'\r\nimport PageHeader from '/web/shared/PageHeader'\r\nimport TextInput from '/web/shared/TextInput'\r\nimport { Toggle } from '/web/shared/Toggle'\r\nimport { Card } from '/web/shared/Card'\r\nimport { getStrictForm } from '/web/shared/util'\r\nimport Button from '/web/shared/Button'\r\nimport Select from '/web/shared/Select'\r\nimport { TierCard } from '../Profile/TierCard'\r\n\r\nexport { TiersPage as default }\r\n\r\nconst TiersPage: Component = (props) => {\r\n  let form: any\r\n  const params = useParams()\r\n  const cfg = userStore()\r\n  const admin = adminStore()\r\n  const settings = settingStore()\r\n\r\n  const products = createMemo(() => {\r\n    const list = admin.products.map((product) => {\r\n      const price = admin.prices.find((price) => price.id === product.default_price)\r\n      const cost = price?.unit_amount ? `$${price.unit_amount / 100}` : ''\r\n      return {\r\n        label: `${product.name} ${cost}`,\r\n        value: product.id,\r\n      }\r\n    })\r\n\r\n    return [{ label: 'No payment required', value: '' }].concat(list)\r\n  })\r\n\r\n  const [editing, setEditing] = createSignal(\r\n    params.id ? cfg.tiers.find((t) => t._id === params.id) : undefined\r\n  )\r\n  const [name, setName] = createSignal(editing()?.name || '')\r\n  const [desc, setDesc] = createSignal(editing()?.description || '')\r\n  const [productId, setProductId] = createSignal(editing()?.productId)\r\n\r\n  const price = createMemo(() => {\r\n    const product = admin.products.find((p) => p.id === productId())\r\n    if (!product) return 0\r\n\r\n    const price = admin.prices.find((pr) => pr.id === product.default_price)\r\n    return price?.unit_amount || 0\r\n  })\r\n\r\n  const patreonTiers = createMemo(() => {\r\n    const items = [{ label: 'None', value: '' }]\r\n\r\n    for (const tier of admin.patreonTiers) {\r\n      items.push({\r\n        label: `$${(tier.attributes.amount_cents / 100).toFixed(2)} ${tier.attributes.title}`,\r\n        value: tier.id,\r\n      })\r\n    }\r\n\r\n    return items\r\n  })\r\n\r\n  const onSubmit = () => {\r\n    const data = getStrictForm(form, {\r\n      name: 'string',\r\n      description: 'string',\r\n      level: 'number',\r\n      productId: 'string',\r\n      enabled: 'boolean',\r\n      disableSlots: 'boolean?',\r\n      apiAccess: 'boolean',\r\n      patreonTier: 'string',\r\n      guidanceAccess: 'boolean',\r\n      imagesAccess: 'boolean',\r\n    })\r\n\r\n    const product = admin.products.find((p) => p.id === data.productId)\r\n    const price = admin.prices.find((p) => p.id === product?.default_price!)\r\n    const patreonTier = admin.patreonTiers.find((t) => t.id === data.patreonTier)\r\n    const patreon = patreonTier\r\n      ? { tierId: patreonTier.id, cost: patreonTier.attributes.amount_cents }\r\n      : (null as any as undefined)\r\n\r\n    if (!product) {\r\n      if (data.productId) {\r\n        toastStore.error(`Cannot submit: Product \"${data.productId}\" not found`)\r\n        return\r\n      }\r\n    }\r\n\r\n    const priceId = product ? (product.default_price as string) : ''\r\n\r\n    if (!product?.default_price && data.productId) {\r\n      toastStore.error(`Cannot submit: Product \"${data.productId}\" does not have a price`)\r\n      return\r\n    }\r\n\r\n    if (!price && data.productId) {\r\n      toastStore.error(`Cannot submit: Price \"${product?.default_price}\" not found`)\r\n      return\r\n    }\r\n\r\n    const id = editing()?._id\r\n\r\n    const tier = {\r\n      ...data,\r\n      name: data.name,\r\n      description: data.description,\r\n      level: data.level,\r\n      productId: data.productId,\r\n      enabled: data.enabled,\r\n      cost: price ? price.unit_amount! : 0,\r\n      patreon,\r\n      priceId,\r\n    }\r\n\r\n    if (id) {\r\n      adminStore.updateTier(id, tier)\r\n    } else {\r\n      adminStore.createTier(tier, (tier) => setEditing(tier))\r\n    }\r\n  }\r\n\r\n  onMount(() => {\r\n    adminStore.getProducts()\r\n    userStore.getTiers()\r\n  })\r\n\r\n  return (\r\n    <>\r\n      <PageHeader title=\"Subscription Tier\" />\r\n\r\n      <A href=\"/admin/subscriptions\" class=\"link\">\r\n        ← Back to Subscriptions\r\n      </A>\r\n\r\n      <Card>\r\n        <form ref={form} class=\"flex flex-col gap-2\">\r\n          <TextInput fieldName=\"id\" label=\"ID\" disabled value={editing()?._id} />\r\n\r\n          <TextInput\r\n            fieldName=\"name\"\r\n            label=\"Name\"\r\n            value={editing()?.name}\r\n            onInput={(ev) => setName(ev.currentTarget.value)}\r\n          />\r\n\r\n          <TextInput\r\n            fieldName=\"description\"\r\n            label=\"Description\"\r\n            helperText=\"This is be rendered using the markdown renderer. HTML is also supported here.\"\r\n            value={editing()?.description}\r\n            isMultiline\r\n            onInput={(ev) => setDesc(ev.currentTarget.value)}\r\n          />\r\n\r\n          <Toggle\r\n            fieldName=\"apiAccess\"\r\n            label=\"API Access Capable\"\r\n            helperText=\"If enabled, this tier can use API access if the server allows it\"\r\n            value={editing()?.apiAccess ?? false}\r\n          />\r\n\r\n          <Toggle\r\n            fieldName=\"guidanceAccess\"\r\n            label=\"Guidance (V2) Access Capable\"\r\n            helperText=\"If enabled, this tier can use GuidanceV2 if the server/preset allows it\"\r\n            value={editing()?.guidanceAccess ?? false}\r\n            classList={{ hidden: !settings.config.adapters.includes('agnaistic') }}\r\n          />\r\n\r\n          <Toggle\r\n            fieldName=\"imagesAccess\"\r\n            label=\"Image Generation Access\"\r\n            helperText=\"If enabled, this tier can use Agnaistic Image Generation\"\r\n            value={editing()?.imagesAccess ?? false}\r\n            classList={{ hidden: !settings.config.adapters.includes('agnaistic') }}\r\n          />\r\n\r\n          <Select\r\n            fieldName=\"patreonTier\"\r\n            label=\"Patreon Tier\"\r\n            helperText=\"If Patreon is linked, the minimum tier is required\"\r\n            value={editing()?.patreon?.tierId}\r\n            items={patreonTiers()}\r\n          />\r\n\r\n          <div class=\"text-lg font-bold\">Preview</div>\r\n\r\n          <TierCard\r\n            tier={{\r\n              name: name(),\r\n              description: desc(),\r\n              cost: price(),\r\n              disableSlots: false,\r\n              apiAccess: false,\r\n              guidanceAccess: false,\r\n              imagesAccess: false,\r\n            }}\r\n          />\r\n\r\n          <Select\r\n            fieldName=\"productId\"\r\n            label=\"Stripe Product\"\r\n            items={products()}\r\n            value={editing()?.productId}\r\n            onChange={(ev) => setProductId(ev.value)}\r\n          />\r\n\r\n          <TextInput type=\"number\" fieldName=\"level\" label=\"Level\" value={editing()?.level ?? -1} />\r\n\r\n          <Toggle\r\n            fieldName=\"enabled\"\r\n            label=\"Enabled\"\r\n            helperText=\"If disabled, this tier will not be available to users for selection.\"\r\n            value={editing()?.enabled}\r\n          />\r\n\r\n          <Show when={!!settings.slots.publisherId}>\r\n            <Toggle\r\n              fieldName=\"disableSlots\"\r\n              label=\"Disable Slots\"\r\n              helperText=\"This tier will prevent slots from rendering\"\r\n              value={editing()?.disableSlots}\r\n            />\r\n          </Show>\r\n\r\n          <div class=\"flex w-full justify-end\">\r\n            <Button onClick={onSubmit}>Save</Button>\r\n          </div>\r\n        </form>\r\n      </Card>\r\n    </>\r\n  )\r\n}\r\n"],"names":["A","useParams","Component","Show","createMemo","createSignal","onMount","adminStore","settingStore","toastStore","userStore","PageHeader","TextInput","Toggle","Card","getStrictForm","Button","Select","TierCard","TiersPage","default","props","form","params","cfg","admin","settings","products","list","map","product","price","prices","find","id","default_price","cost","unit_amount","label","name","value","concat","editing","setEditing","tiers","t","_id","undefined","setName","desc","setDesc","description","productId","setProductId","p","pr","patreonTiers","items","tier","push","attributes","amount_cents","toFixed","title","onSubmit","data","level","enabled","disableSlots","apiAccess","patreonTier","guidanceAccess","imagesAccess","patreon","tierId","error","priceId","updateTier","createTier","getProducts","getTiers","_$createComponent","href","children","_el$","_tmpl$","cloneNode","_el$2","firstChild","_el$3","nextSibling","_ref$","_$use","_$insert","fieldName","disabled","onInput","ev","currentTarget","helperText","isMultiline","classList","hidden","config","adapters","includes","onChange","type","when","slots","publisherId","onClick"],"version":3,"file":"Tiers.74a92146.js.map"}