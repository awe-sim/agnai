{"mappings":"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","sources":["web/pages/Admin/Configuration.tsx"],"sourcesContent":["import { Component, For, Signal, createSignal } from 'solid-js'\r\nimport { adminStore, settingStore, userStore } from '/web/store'\r\nimport { useNavigate } from '@solidjs/router'\r\nimport PageHeader from '/web/shared/PageHeader'\r\nimport { Toggle } from '/web/shared/Toggle'\r\nimport Select from '/web/shared/Select'\r\nimport TextInput from '/web/shared/TextInput'\r\nimport { FieldUpdater, getStrictForm, useRowHelper } from '/web/shared/util'\r\nimport { SaveIcon } from 'lucide-solid'\r\nimport Button from '/web/shared/Button'\r\nimport Divider from '/web/shared/Divider'\r\n\r\nexport { ServerConfiguration as default }\r\n\r\nconst ServerConfiguration: Component = () => {\r\n  let form: HTMLFormElement\r\n  const user = userStore()\r\n  const nav = useNavigate()\r\n  const state = settingStore((s) => s.config)\r\n\r\n  const [slots, setSlots] = createSignal(state.serverConfig?.slots || '{}')\r\n\r\n  if (!user.user?.admin) {\r\n    nav('/')\r\n    return null\r\n  }\r\n\r\n  const formatSlots = (ev: FormEvent) => {\r\n    try {\r\n      const obj = JSON.parse(ev.currentTarget.value || '{}')\r\n      setSlots(JSON.stringify(obj, null, 2))\r\n    } catch (ex) {}\r\n  }\r\n\r\n  const models = createSignal(\r\n    Array.isArray(state.serverConfig?.imagesModels) ? state.serverConfig.imagesModels : []\r\n  )\r\n\r\n  const submit = () => {\r\n    const body = getStrictForm(form, {\r\n      apiAccess: ['off', 'users', 'subscribers', 'admins'],\r\n      slots: 'string',\r\n      maintenance: 'boolean',\r\n      maintenanceMessage: 'string',\r\n      termsOfService: 'string',\r\n      privacyStatement: 'string',\r\n      policiesEnabled: 'boolean',\r\n      imagesHost: 'string',\r\n      imagesEnabled: 'boolean',\r\n      supportEmail: 'string',\r\n      ttsEnabled: 'boolean',\r\n      ttsHost: 'string',\r\n    })\r\n\r\n    adminStore.updateServerConfig({\r\n      ...body,\r\n      slots: slots(),\r\n      imagesModels: models[0](),\r\n      enabledAdapters: [],\r\n    })\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <PageHeader title=\"Server Configuration\" />\r\n\r\n      <form ref={form!} class=\"flex flex-col gap-2\" onSubmit={(ev) => ev.preventDefault()}>\r\n        <Select\r\n          fieldName=\"apiAccess\"\r\n          label=\"API Access Level\"\r\n          items={[\r\n            { label: 'Off', value: 'off' },\r\n            { label: 'All Users', value: 'users' },\r\n            { label: 'Subscribers', value: 'subscribers' },\r\n            { label: 'Adminstrators', value: 'admins' },\r\n          ]}\r\n          value={state.serverConfig?.apiAccess || 'off'}\r\n        />\r\n\r\n        <TextInput\r\n          fieldName=\"imagesHost\"\r\n          label={\r\n            <>\r\n              <div class=\"flex gap-2\">\r\n                <div>Agnaistic Images Host</div>\r\n                <Toggle fieldName=\"imagesEnabled\" value={state.serverConfig?.imagesEnabled} />\r\n              </div>\r\n            </>\r\n          }\r\n          value={state.serverConfig?.imagesHost}\r\n          classList={{ hidden: !state.adapters.includes('agnaistic') }}\r\n        />\r\n\r\n        <TextInput\r\n          fieldName=\"ttsHost\"\r\n          label={\r\n            <>\r\n              <div class=\"flex gap-2\">\r\n                <div>Agnaistic TTS Host</div>\r\n                <Toggle fieldName=\"ttsEnabled\" value={state.serverConfig?.ttsEnabled} />\r\n              </div>\r\n            </>\r\n          }\r\n          value={state.serverConfig?.ttsHost}\r\n          classList={{ hidden: !state.adapters.includes('agnaistic') }}\r\n        />\r\n\r\n        <TextInput\r\n          fieldName=\"supportEmail\"\r\n          label=\"Support Email\"\r\n          helperText=\"If provided, a link to this email will be added to the main navigation\"\r\n          value={state.serverConfig?.supportEmail}\r\n        />\r\n\r\n        <ImageModels signal={models} />\r\n\r\n        <Toggle\r\n          fieldName=\"maintenance\"\r\n          label=\"Maintenace Mode Enabled\"\r\n          helperText=\"Caution: If your database is no available, this flag will not work. Use the environment variable instead.\"\r\n          value={state.serverConfig?.maintenance}\r\n        />\r\n\r\n        <TextInput\r\n          fieldName=\"maintenanceMessage\"\r\n          isMultiline\r\n          label=\"Maintenance Message\"\r\n          helperText=\"Markdown is supported\"\r\n          value={state.serverConfig?.maintenanceMessage}\r\n        />\r\n\r\n        <TextInput\r\n          fieldName=\"slots\"\r\n          label=\"Slots Configuration\"\r\n          helperText=\"Must be JSON. Merged with remote slots config -- This config overrides slots.txt\"\r\n          value={slots()}\r\n          onInput={formatSlots}\r\n          isMultiline\r\n        />\r\n\r\n        <Toggle\r\n          fieldName=\"policiesEnabled\"\r\n          label=\"Enable Policies\"\r\n          helperText=\"Display TOS and Privacy Statements\"\r\n          disabled\r\n          class=\"hidden\"\r\n        />\r\n\r\n        <TextInput\r\n          fieldName=\"termsOfService\"\r\n          label=\"Terms of Service\"\r\n          helperText=\"Not yet implemented\"\r\n          isMultiline\r\n          disabled\r\n        />\r\n        <TextInput\r\n          fieldName=\"privacyStatement\"\r\n          label=\"PrivacyStatement\"\r\n          helperText=\"Not yet implemented\"\r\n          isMultiline\r\n          disabled\r\n        />\r\n\r\n        <div class=\"flex justify-end\">\r\n          <Button onClick={submit} class=\"w-fit\">\r\n            <SaveIcon /> Save\r\n          </Button>\r\n        </div>\r\n      </form>\r\n    </>\r\n  )\r\n}\r\n\r\ntype Threshold = { steps: number; cfg: number; height: number; width: number }\r\ntype Model = { name: string; desc: string; init: Threshold; limit: Threshold }\r\n\r\nconst ImageModels: Component<{ signal: Signal<Model[]> }> = (props) => {\r\n  const rows = useRowHelper({\r\n    signal: props.signal,\r\n    empty: {\r\n      name: '',\r\n      desc: '',\r\n      init: { steps: 5, cfg: 2, height: 1024, width: 1024 },\r\n      limit: { steps: 128, cfg: 20, height: 1024, width: 1024 },\r\n    },\r\n  })\r\n\r\n  return (\r\n    <>\r\n      <div class=\"flex items-center gap-2\">\r\n        Image Models{' '}\r\n        <Button size=\"sm\" onClick={rows.add}>\r\n          Add\r\n        </Button>\r\n      </div>\r\n      <For each={rows.items()}>\r\n        {(item, i) => (\r\n          <ImageModel index={i()} item={item} updater={rows.updater} remove={rows.remove} />\r\n        )}\r\n      </For>\r\n    </>\r\n  )\r\n}\r\n\r\nconst ImageModel: Component<{\r\n  index: number\r\n  item: Model\r\n  updater: FieldUpdater\r\n  remove: (index: number) => void\r\n}> = (props) => {\r\n  return (\r\n    <div class=\"flex flex-col gap-1\">\r\n      <div class=\"flex w-full items-center gap-2\">\r\n        <TextInput\r\n          fieldName=\"model.name\"\r\n          parentClass=\"w-1/2\"\r\n          placeholder=\"Model Name...\"\r\n          onChange={props.updater(props.index, 'name')}\r\n          value={props.item.name}\r\n        />\r\n        <TextInput\r\n          fieldName=\"model.desc\"\r\n          parentClass=\"w-1/2\"\r\n          placeholder=\"Model Description...\"\r\n          onChange={props.updater(props.index, 'desc')}\r\n          value={props.item.desc}\r\n        />\r\n        <Button size=\"sm\" schema=\"red\" onClick={() => props.remove(props.index)}>\r\n          Remove\r\n        </Button>\r\n      </div>\r\n\r\n      <table class=\"table-auto border-separate border-spacing-2\">\r\n        <thead>\r\n          <tr>\r\n            <Th />\r\n            <Th>Steps</Th>\r\n            <Th>CFG</Th>\r\n            <Th>Width</Th>\r\n            <Th>Height</Th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr>\r\n            <Td class=\"px-2 font-bold\">Recommended</Td>\r\n            <Td>\r\n              <TextInput\r\n                type=\"number\"\r\n                parentClass=\"col-span-2\"\r\n                fieldName=\"model.init.steps\"\r\n                onChange={props.updater(props.index, 'init.steps')}\r\n                value={props.item.init.steps}\r\n              />\r\n            </Td>\r\n\r\n            <Td>\r\n              <TextInput\r\n                type=\"number\"\r\n                parentClass=\"col-span-2\"\r\n                fieldName=\"model.init.cfg\"\r\n                onChange={props.updater(props.index, 'init.cfg')}\r\n                value={props.item.init.cfg}\r\n              />\r\n            </Td>\r\n\r\n            <Td>\r\n              <TextInput\r\n                type=\"number\"\r\n                parentClass=\"col-span-2\"\r\n                fieldName=\"model.init.width\"\r\n                onChange={props.updater(props.index, 'init.width')}\r\n                value={props.item.init.width}\r\n              />\r\n            </Td>\r\n\r\n            <Td>\r\n              <TextInput\r\n                type=\"number\"\r\n                parentClass=\"col-span-2\"\r\n                fieldName=\"model.init.height\"\r\n                onChange={props.updater(props.index, 'init.height')}\r\n                value={props.item.init.height}\r\n              />\r\n            </Td>\r\n          </tr>\r\n\r\n          <tr>\r\n            <Td class=\"px-2 font-bold\">Maximums</Td>\r\n            <Td>\r\n              <TextInput\r\n                type=\"number\"\r\n                parentClass=\"col-span-2\"\r\n                fieldName=\"model.limit.steps\"\r\n                onChange={props.updater(props.index, 'limit.steps')}\r\n                value={props.item.limit.steps}\r\n              />\r\n            </Td>\r\n\r\n            <Td>\r\n              <TextInput\r\n                type=\"number\"\r\n                parentClass=\"col-span-2\"\r\n                fieldName=\"model.limit.cfg\"\r\n                onChange={props.updater(props.index, 'limit.cfg')}\r\n                value={props.item.limit.cfg}\r\n              />\r\n            </Td>\r\n\r\n            <Td>\r\n              <TextInput\r\n                type=\"number\"\r\n                parentClass=\"col-span-2\"\r\n                fieldName=\"model.limit.width\"\r\n                onChange={props.updater(props.index, 'limit.width')}\r\n                value={props.item.limit.width}\r\n              />\r\n            </Td>\r\n\r\n            <Td>\r\n              <TextInput\r\n                type=\"number\"\r\n                parentClass=\"col-span-2\"\r\n                fieldName=\"model.limit.height\"\r\n                onChange={props.updater(props.index, 'limit.height')}\r\n                value={props.item.limit.height}\r\n              />\r\n            </Td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n\r\n      <Divider />\r\n    </div>\r\n  )\r\n}\r\n\r\nconst Th: Component<{ children?: any }> = (props) => (\r\n  <th\r\n    class=\"rounded-md border-[var(--bg-600)] px-2 font-bold\"\r\n    classList={{ border: !!props.children, 'bg-[var(--bg-700)]': !!props.children }}\r\n  >\r\n    {props.children}\r\n  </th>\r\n)\r\nconst Td: Component<{ children?: any; class?: string }> = (props) => (\r\n  <td\r\n    class={`rounded-md border-[var(--bg-600)] ${props.class || ''}`}\r\n    classList={{ border: !!props.children }}\r\n  >\r\n    {props.children}\r\n  </td>\r\n)\r\n"],"names":["Component","For","Signal","createSignal","adminStore","settingStore","userStore","useNavigate","PageHeader","Toggle","Select","TextInput","FieldUpdater","getStrictForm","useRowHelper","SaveIcon","Button","Divider","ServerConfiguration","default","form","HTMLFormElement","user","nav","state","s","config","slots","setSlots","serverConfig","admin","formatSlots","ev","FormEvent","obj","JSON","parse","currentTarget","value","stringify","ex","models","Array","isArray","imagesModels","submit","body","apiAccess","maintenance","maintenanceMessage","termsOfService","privacyStatement","policiesEnabled","imagesHost","imagesEnabled","supportEmail","ttsEnabled","ttsHost","updateServerConfig","enabledAdapters","_$createComponent","title","_el$","_tmpl$","cloneNode","_el$2","firstChild","addEventListener","preventDefault","_ref$","_$use","_$insert","fieldName","label","items","_el$3","_tmpl$2","_el$4","classList","hidden","adapters","includes","_el$5","_tmpl$3","_el$6","helperText","ImageModels","signal","isMultiline","onInput","disabled","onClick","children","Threshold","steps","cfg","height","width","Model","name","desc","init","limit","props","rows","empty","_el$7","_tmpl$4","_el$8","size","add","each","item","i","ImageModel","index","updater","remove","_el$10","_tmpl$5","_el$11","_el$12","nextSibling","_el$13","_el$14","_el$15","_el$16","_el$17","parentClass","placeholder","onChange","schema","Th","Td","type","_el$18","_tmpl$6","_$effect","_p$","_v$","_v$2","toggle","undefined","class","_el$19","_tmpl$7","_v$3","_v$4","_$className"],"version":3,"file":"Configuration.e15905ad.js.map"}