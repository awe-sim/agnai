{"mappings":"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","sources":["web/pages/Memory/EditMemoryPage.tsx"],"sourcesContent":["import { useNavigate, useParams } from '@solidjs/router'\r\nimport PageHeader from '../../shared/PageHeader'\r\nimport { setComponentPageTitle } from '../../shared/util'\r\nimport { memoryStore } from '../../store'\r\nimport { Show, createSignal, onMount } from 'solid-js'\r\nimport { AppSchema } from '../../../common/types/schema'\r\nimport EditMemoryForm, { EntrySort } from './EditMemory'\r\nimport { Option } from '../../shared/Select'\r\nimport Button from '../../shared/Button'\r\nimport { FormLabel } from '../../shared/FormLabel'\r\nimport { Save } from 'lucide-solid'\r\nimport { emptyBookWithEmptyEntry } from '/common/memory'\r\n\r\nconst EditMemoryPage = () => {\r\n  const { updateTitle } = setComponentPageTitle('Memory book')\r\n  let ref: any\r\n  const nav = useNavigate()\r\n  const params = useParams()\r\n  const state = memoryStore()\r\n  const [editing, setEditing] = createSignal<AppSchema.MemoryBook>()\r\n  const [entrySort, setEntrySort] = createSignal<EntrySort>('creationDate')\r\n  const updateEntrySort = (item: Option<string>) => {\r\n    if (item.value === 'creationDate' || item.value === 'alpha') {\r\n      setEntrySort(item.value)\r\n    }\r\n  }\r\n\r\n  const updateBook = (update: Partial<AppSchema.MemoryBook>) => {\r\n    const prev = editing()!\r\n    setEditing({ ...prev, ...update })\r\n  }\r\n\r\n  onMount(() => {\r\n    if (params.id === 'new') {\r\n      updateTitle('Create memory book')\r\n      setEditing(emptyBookWithEmptyEntry())\r\n      return\r\n    }\r\n\r\n    const match = state.books.list.find((m) => m._id === params.id)\r\n    if (match) {\r\n      updateTitle(`Edit ${match.name}`)\r\n      setEditing(match)\r\n    }\r\n  })\r\n\r\n  const saveBook = (ev: Event) => {\r\n    ev.preventDefault()\r\n    // Why do we set the sort to creationDate before saving, then restore the\r\n    // previous sort? Two reasons:\r\n    // - Creation date is not actually saved in the DB\r\n    // - When saving the memory book, the data is taken from the DOM\r\n    // (This should ideally be improved in a future patch)\r\n    // Therefore every time we save the memory book we have to ensure the DOM\r\n    // has the entries in creation order, for now.\r\n    const oldEntrySort = entrySort()\r\n    setEntrySort('creationDate')\r\n    const body = editing()\r\n    if (!params.id || !body) return\r\n\r\n    if (params.id === 'new') {\r\n      memoryStore.create(body, (book) => {\r\n        setEditing(book)\r\n        nav(`/memory/${book._id}`)\r\n      })\r\n    } else {\r\n      memoryStore.update(params.id, body)\r\n    }\r\n    setEntrySort(oldEntrySort)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <PageHeader title=\"Edit Memory Book\" />\r\n      <Show when={!!editing()}>\r\n        <form ref={ref} onSubmit={saveBook}>\r\n          <div class=\"mt-4 flex justify-end\">\r\n            <Button type=\"submit\">\r\n              <Save />\r\n              {!editing()?._id ? 'Create Book' : 'Update Book'}\r\n            </Button>\r\n          </div>\r\n          <EditMemoryForm\r\n            book={editing()!}\r\n            entrySort={entrySort()}\r\n            updateEntrySort={updateEntrySort}\r\n            onChange={updateBook}\r\n          />\r\n          <div class=\"mt-4 flex justify-end\">\r\n            <Button type=\"submit\">\r\n              <Save />\r\n              {!editing()?._id ? 'Create Book' : 'Update Book'}\r\n            </Button>\r\n          </div>\r\n\r\n          <div class=\"mt-8 flex flex-col\">\r\n            <div class=\"flex flex-col gap-2\">\r\n              <div class=\"text-lg font-bold\">Definitions</div>\r\n              <FormLabel\r\n                fieldName=\"priorty\"\r\n                label=\"Priority\"\r\n                helperText=\"When deciding which entries to INCLUDE in the prompt, the higher the priority entries win.\"\r\n              />\r\n\r\n              <FormLabel\r\n                fieldName=\"weight\"\r\n                label=\"Weight\"\r\n                helperText=\"When deciding how to ORDER entries, the higher the weight the closer to the bottom.\"\r\n              />\r\n\r\n              <FormLabel\r\n                fieldName=\"keywords\"\r\n                label=\"Keywords\"\r\n                helperText={\r\n                  <>\r\n                    These are the terms that trigger the entry to be potentially included in the\r\n                    prompt. You can use <code>{'{{char}}'}</code> and <code>{'{{user}}'}</code>{' '}\r\n                    placeholders here.\r\n                  </>\r\n                }\r\n              />\r\n\r\n              <FormLabel\r\n                fieldName=\"entry\"\r\n                label=\"Entry\"\r\n                helperText={\r\n                  <>\r\n                    This is the text that will be included in the prompt. You can use{' '}\r\n                    <code>{'{{char}}'}</code> and <code>{'{{user}}'}</code> placeholders here.\r\n                  </>\r\n                }\r\n              />\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </Show>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default EditMemoryPage\r\n"],"names":["useNavigate","useParams","PageHeader","setComponentPageTitle","memoryStore","Show","createSignal","onMount","AppSchema","EditMemoryForm","EntrySort","Option","Button","FormLabel","Save","emptyBookWithEmptyEntry","EditMemoryPage","updateTitle","ref","nav","params","state","editing","setEditing","MemoryBook","entrySort","setEntrySort","updateEntrySort","item","value","updateBook","update","Partial","prev","id","match","books","list","find","m","_id","name","saveBook","ev","Event","preventDefault","oldEntrySort","body","create","book","_$createComponent","title","when","children","_el$","_tmpl$","cloneNode","_el$2","firstChild","_el$3","nextSibling","_el$4","_el$5","_el$6","addEventListener","_ref$","_$use","_$insert","type","_$memo","onChange","fieldName","label","helperText","_tmpl$2","_tmpl$3"],"version":3,"file":"EditMemoryPage.7c09a1bf.js.map"}