{"mappings":"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","sources":["web/pages/Chub/Chub.tsx","web/pages/Chub/FilterSettings.tsx","web/pages/Chub/CharList.tsx","web/pages/Chub/ChubItem.tsx","web/pages/Chub/util.ts","web/pages/Chub/ChubNavigation.tsx","web/pages/Chub/BookList.tsx","web/pages/Chub/ChubImportChar.tsx","web/pages/Chub/ChubImportBook.tsx"],"sourcesContent":["import { Component, Show, createEffect, createMemo, createSignal } from 'solid-js'\r\nimport PageHeader from '../../shared/PageHeader'\r\nimport { setComponentPageTitle } from '../../shared/util'\r\nimport Tabs from '../../shared/Tabs'\r\nimport FilterSettings from './FilterSettings'\r\nimport CharList from './CharList'\r\nimport BookList from './BookList'\r\nimport { NewCharacter } from '/web/store'\r\nimport { AppSchema } from '/common/types'\r\nimport ChubImportCharModal from './ChubImportChar'\r\nimport ChubImportBookModal from './ChubImportBook'\r\nimport { useNavigate, useParams } from '@solidjs/router'\r\n\r\nconst chubTabs = {\r\n  characters: 'Characters',\r\n  lorebooks: 'Lorebooks',\r\n  filter: 'Filter Settings',\r\n}\r\n\r\ntype Tab = keyof typeof chubTabs\r\n\r\nconst Chub: Component = () => {\r\n  const params = useParams()\r\n  const nav = useNavigate()\r\n  const tabs: Tab[] = ['characters', 'lorebooks', 'filter']\r\n\r\n  const [tab, setTab] = createSignal(0)\r\n  const [charModal, setCharModal] = createSignal<{ char: NewCharacter; fullPath: string }>()\r\n  const [bookModal, setBookModal] = createSignal<{ book: AppSchema.MemoryBook; fullPath: string }>()\r\n  const [loading, setLoading] = createSignal(false)\r\n\r\n  createEffect(() => {\r\n    const index = tabs.indexOf(params.tab || ('characters' as any))\r\n    setTab(index)\r\n  })\r\n\r\n  const currentTab = createMemo(() => tabs[tab()])\r\n  setComponentPageTitle('CHUB')\r\n\r\n  const tabClass = `flex flex-col gap-4`\r\n\r\n  return (\r\n    <>\r\n      <PageHeader title=\"Character Hub\" />\r\n\r\n      <div class=\"my-2\">\r\n        <Tabs\r\n          tabs={tabs.map((t) => chubTabs[t])}\r\n          selected={tab}\r\n          select={(tab) => {\r\n            nav(`/chub/${tabs[tab]}`)\r\n          }}\r\n        />\r\n      </div>\r\n      <div class=\"flex flex-col gap-4\">\r\n        <div class={currentTab() === 'characters' ? tabClass : 'hidden'}>\r\n          <CharList\r\n            loading={() => setLoading(true)}\r\n            setChar={(char, fullPath) => {\r\n              setCharModal({ char, fullPath })\r\n              setLoading(false)\r\n            }}\r\n          />\r\n        </div>\r\n\r\n        <div class={currentTab() === 'lorebooks' ? tabClass : 'hidden'}>\r\n          <BookList setBook={(book, fullPath) => setBookModal({ book, fullPath })} />\r\n        </div>\r\n\r\n        <div class={currentTab() === 'filter' ? tabClass : 'hidden'}>\r\n          <FilterSettings />\r\n        </div>\r\n      </div>\r\n      <div>\r\n        <sub>\r\n          <em>\r\n            Disclaimer: Characters are owned and managed by{' '}\r\n            <a class=\"link\" href=\"https://chub.ai\" target=\"_blank\">\r\n              CHUB.ai\r\n            </a>\r\n            .\r\n          </em>\r\n        </sub>\r\n      </div>\r\n      <Show when={loading() || !!charModal()}>\r\n        <ChubImportCharModal show={true} close={() => setCharModal()} char={charModal()?.char} />\r\n      </Show>\r\n      <Show when={bookModal()}>\r\n        <ChubImportBookModal\r\n          show={true}\r\n          close={() => setBookModal()}\r\n          fullPath={bookModal()!.fullPath}\r\n          book={bookModal()!.book}\r\n        />\r\n      </Show>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Chub\r\n","import { Component } from 'solid-js'\r\nimport TextInput from '../../shared/TextInput'\r\nimport { Toggle } from '../../shared/Toggle'\r\nimport Select from '../../shared/Select'\r\nimport { toDropdownItems } from '../../shared/util'\r\nimport { chubStore } from '../../store/chub'\r\n\r\nconst sorts = [\r\n  'Download Count',\r\n  'ID',\r\n  'Rating',\r\n  'Rating Count',\r\n  'Last Activity',\r\n  'Creation Date',\r\n  'Name',\r\n  'Token Count',\r\n]\r\n\r\nconst FilterSettings: Component = () => {\r\n  const state = chubStore()\r\n\r\n  const update = () => {\r\n    chubStore.setPage(1)\r\n    chubStore.getChars()\r\n    chubStore.getBooks()\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Toggle\r\n        fieldName=\"nsfw\"\r\n        label=\"NSFW\"\r\n        helperText=\"Allow NSFW characters/lorebooks to appear in results.\"\r\n        value={state.nsfw}\r\n        onChange={(v) => {\r\n          chubStore.setNSFW(v)\r\n          update()\r\n        }}\r\n      />\r\n      <TextInput\r\n        fieldName=\"tags\"\r\n        label=\"Query Tags\"\r\n        helperText=\"A comma-separated list of tags to include.\"\r\n        placeholder=\"E.g. blue_archive,female,anime\"\r\n        value={state.tags}\r\n        onChange={(ev) => {\r\n          chubStore.setTags(ev.currentTarget.value)\r\n          update()\r\n        }}\r\n      />\r\n      <TextInput\r\n        fieldName=\"excludeTags\"\r\n        label=\"Exclude Tags\"\r\n        helperText=\"A comma-separated list of tags to exclude.\"\r\n        value={state.excludeTags}\r\n        onChange={(ev) => {\r\n          chubStore.setExcludeTags(ev.currentTarget.value)\r\n          update()\r\n        }}\r\n      />\r\n      <Select\r\n        fieldName=\"sort\"\r\n        label=\"Sort By\"\r\n        items={toDropdownItems(sorts)}\r\n        value={state.sort}\r\n        onChange={(v) => {\r\n          chubStore.setSort(v.value)\r\n          update()\r\n        }}\r\n      />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default FilterSettings\r\n","import { Component, For, Show } from 'solid-js'\r\nimport { ChubItem } from './ChubItem'\r\nimport { chubStore } from '../../store/chub'\r\nimport ChubNavigation from './ChubNavigation'\r\nimport type { NewCharacter } from '/web/store/character'\r\nimport Loading from '/web/shared/Loading'\r\n\r\nconst CharList: Component<{\r\n  loading: () => void\r\n  setChar: (char: NewCharacter, fullPath: string) => void\r\n}> = (props) => {\r\n  const state = chubStore()\r\n\r\n  return (\r\n    <>\r\n      <ChubNavigation buttons={state.chars.length >= 48} />\r\n      <Show when={state.charsLoading}>\r\n        <div class=\"flex w-full justify-center\">\r\n          <Loading />\r\n        </div>\r\n      </Show>\r\n      <div class=\"grid w-full grid-cols-[repeat(auto-fit,minmax(160px,1fr))] flex-row flex-wrap justify-start gap-2 py-2\">\r\n        <For each={state.chars.slice(48 * (state.page - 1))}>\r\n          {(char) => (\r\n            <ChubItem\r\n              loading={props.loading}\r\n              name={char.name}\r\n              fullPath={char.fullPath}\r\n              description={char.tagline || char.description}\r\n              avatar={\r\n                `https://avatars.charhub.io/avatars/${char.fullPath}/avatar.webp` ||\r\n                `https://git.chub.ai/${char.fullPath}/-/raw/main/avatar.webp`\r\n              }\r\n              setChar={props.setChar}\r\n            />\r\n          )}\r\n        </For>\r\n        <Show when={state.chars.length < 4}>\r\n          <For each={new Array(4 - state.chars.length)}>{() => <div></div>}</For>\r\n        </Show>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default CharList\r\n","import { Component, createSignal } from 'solid-js'\r\nimport { NewCharacter } from '/web/store'\r\nimport { extractCardData } from '../Character/card-utils'\r\nimport { processBook, processChar } from './util'\r\nimport { AppSchema } from '/common/types'\r\nimport { jsonToCharacter } from '../Character/port'\r\n\r\nexport const ChubItem: Component<{\r\n  name: string\r\n  fullPath: string\r\n  avatar: string\r\n  loading?: () => void\r\n  book?: boolean\r\n  description: string\r\n  setBook?: (book: AppSchema.MemoryBook, fullPath: string) => void\r\n  setChar?: (char: NewCharacter, fullPath: string) => void\r\n}> = (props) => {\r\n  const [memorybook, setMemoryBook] = createSignal<any>({})\r\n\r\n  const processItem = async () => {\r\n    props.loading?.()\r\n    if (props.book) {\r\n      const book = await processBook(props.fullPath)\r\n      setMemoryBook(book)\r\n      props.setBook?.(\r\n        {\r\n          _id: '',\r\n          kind: 'memory',\r\n          name: memorybook().name == 'Exported' ? props.name : memorybook().name,\r\n          description: memorybook().description,\r\n          userId: '',\r\n          entries: memorybook().entries,\r\n        },\r\n        props.fullPath\r\n      )\r\n      return\r\n    }\r\n\r\n    const file = await processChar(props.fullPath)\r\n    const json = await extractCardData(file)\r\n    if (!json) {\r\n      throw new Error('Invalid tavern image')\r\n    }\r\n    props.setChar?.(Object.assign(jsonToCharacter(json), { avatar: file }), props.fullPath)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div class=\"bg-800 flex flex-col items-center justify-between gap-1 rounded-lg border-[1px] border-[var(--bg-600)]\">\r\n        <div class=\"w-full\">\r\n          <div\r\n            class=\"block h-32 w-full cursor-pointer justify-center overflow-hidden rounded-lg rounded-b-none\"\r\n            onClick={processItem}\r\n          >\r\n            <img\r\n              src={props.avatar}\r\n              class=\"h-full w-full object-cover\"\r\n              style=\"object-position: 50% 30%;\"\r\n            />\r\n          </div>\r\n        </div>\r\n        <div class=\"w-full text-sm\">\r\n          <div class=\"w-full overflow-hidden text-ellipsis whitespace-nowrap px-1 text-sm font-bold\">\r\n            {props.name}\r\n          </div>\r\n          <div class=\"text-600 line-clamp-3 h-[3rem] text-ellipsis px-1 text-center text-xs font-normal\">\r\n            {props.description}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n","import { CHUB_URL } from '/web/store/chub'\r\n\r\nconst headers = {\r\n  'Content-Type': 'application/json',\r\n  accept: '/',\r\n}\r\n\r\nexport async function processBook(fullPath: string) {\r\n  const body = { format: 'AGNAI', fullPath, version: 'main' }\r\n  const res = await fetch(`${CHUB_URL}/lorebooks/download`, {\r\n    headers,\r\n    body: JSON.stringify(body),\r\n    method: 'post',\r\n  })\r\n\r\n  const json = await res.json()\r\n  return json\r\n}\r\n\r\nexport async function processChar(fullPath: string) {\r\n  const body = { format: 'tavern', fullPath, version: 'main' }\r\n  const res = await fetch(`${CHUB_URL}/characters/download`, {\r\n    headers,\r\n    body: JSON.stringify(body),\r\n    method: 'post',\r\n  })\r\n\r\n  const blob = await res.blob()\r\n  const file = new File([blob], `main_${fullPath}.png`, { type: 'image/png' })\r\n  return file\r\n}\r\n","import { Component, Show, onMount } from 'solid-js'\r\nimport { chubStore } from '../../store/chub'\r\nimport TextInput from '../../shared/TextInput'\r\nimport Button from '../../shared/Button'\r\nimport { ArrowLeft, ArrowRight } from 'lucide-solid'\r\nimport { toastStore } from '../../store'\r\n\r\nconst ChubNavigation: Component<{ buttons: boolean }> = (props) => {\r\n  const state = chubStore()\r\n\r\n  const update = () => {\r\n    chubStore.getBooks()\r\n    chubStore.getChars()\r\n  }\r\n\r\n  onMount(update)\r\n\r\n  const onSearch = (\r\n    ev: KeyboardEvent & {\r\n      target: Element\r\n      currentTarget: HTMLInputElement | HTMLTextAreaElement\r\n    }\r\n  ) => {\r\n    chubStore.setSearch(ev.currentTarget.value)\r\n    update()\r\n    chubStore.setPage(1)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div class=\"mt-2 flex justify-between\">\r\n        <div class=\"flex gap-2\">\r\n          <TextInput\r\n            fieldName=\"search\"\r\n            placeholder=\"Search by name...\"\r\n            value={state.search}\r\n            onKeyUp={onSearch}\r\n          />\r\n          <Show when={props.buttons}>\r\n            <Button\r\n              schema=\"secondary\"\r\n              class=\"rounded-xl\"\r\n              onClick={() => {\r\n                if (state.page > 1) {\r\n                  chubStore.setPage(state.page - 1)\r\n                  update()\r\n                } else {\r\n                  toastStore.error('Already on first page!')\r\n                }\r\n              }}\r\n            >\r\n              <ArrowLeft />\r\n            </Button>\r\n\r\n            <div class=\"w-12\">\r\n              <TextInput\r\n                fieldName=\"number\"\r\n                value={state.page}\r\n                onKeyUp={(ev) => {\r\n                  const n = Number(ev.currentTarget.value)\r\n                  if (!isNaN(n) && n !== 0) {\r\n                    chubStore.setPage(n)\r\n                    update()\r\n                  } else {\r\n                    toastStore.error('Not a valid page number.')\r\n                  }\r\n                }}\r\n              />\r\n            </div>\r\n            <Button\r\n              schema=\"secondary\"\r\n              class=\"rounded-xl\"\r\n              onClick={() => {\r\n                if (state.chars.length % 48 == 0) {\r\n                  chubStore.setPage(state.page + 1)\r\n                  update()\r\n                } else {\r\n                  toastStore.error(`Already on last page!`)\r\n                }\r\n              }}\r\n            >\r\n              <ArrowRight />\r\n            </Button>\r\n          </Show>\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ChubNavigation\r\n","import { Component, For, Show } from 'solid-js'\r\nimport { ChubItem } from './ChubItem'\r\nimport { chubStore } from '../../store/chub'\r\nimport ChubNavigation from './ChubNavigation'\r\nimport { AppSchema } from '/common/types'\r\nimport Loading from '/web/shared/Loading'\r\n\r\nconst BookList: Component<{\r\n  setBook: (book: AppSchema.MemoryBook, fullPath: string) => void\r\n}> = (props) => {\r\n  const state = chubStore()\r\n\r\n  return (\r\n    <>\r\n      <ChubNavigation buttons={state.books.length >= 48} />\r\n      <Show when={state.booksLoading}>\r\n        <div class=\"flex w-full justify-center\">\r\n          <Loading />\r\n        </div>\r\n      </Show>\r\n      <div class=\"grid w-full grid-cols-[repeat(auto-fit,minmax(105px,1fr))] flex-row flex-wrap justify-start gap-2 py-2\">\r\n        <For each={state.books}>\r\n          {(book) => (\r\n            <ChubItem\r\n              name={book.name}\r\n              fullPath={book.fullPath}\r\n              avatar={`https://avatars.charhub.io/avatars/${book.fullPath}/avatar.webp`}\r\n              book={true}\r\n              setBook={props.setBook}\r\n              description={book.tagline || book.description}\r\n            />\r\n          )}\r\n        </For>\r\n        <Show when={state.books.length < 4}>\r\n          <For each={new Array(4 - state.books.length)}>{() => <div></div>}</For>\r\n        </Show>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default BookList\r\n","import { Check, X } from 'lucide-solid'\r\nimport { Component, Show, createEffect, createSignal } from 'solid-js'\r\nimport Button from '../../shared/Button'\r\nimport Modal from '../../shared/Modal'\r\nimport TextInput from '../../shared/TextInput'\r\nimport { NewCharacter, characterStore, toastStore } from '../../store'\r\nimport Loading from '/web/shared/Loading'\r\n\r\nconst ChubImportCharModal: Component<{\r\n  show: boolean\r\n  close: () => void\r\n  id?: string\r\n  char?: NewCharacter\r\n}> = (props) => {\r\n  let ref: any\r\n\r\n  const [char, setChar] = createSignal<NewCharacter>(props.char!)\r\n\r\n  createEffect(() => {\r\n    if (!props.char) return\r\n    setChar(props.char)\r\n  })\r\n\r\n  const onImport = () => {\r\n    if (!props.char) return\r\n    try {\r\n      characterStore.createCharacter(props.char)\r\n    } catch (error) {\r\n      toastStore.error(`Error importing ${props.char.name}! ${error}`)\r\n    }\r\n    props.close()\r\n  }\r\n\r\n  return (\r\n    <Modal\r\n      show={props.show}\r\n      close={props.close}\r\n      title={\r\n        <>\r\n          Preview\r\n          <a class=\"text-[var(--hl-500)]\"> {char()?.name || '...'}</a>\r\n        </>\r\n      }\r\n      maxWidth=\"half\"\r\n      footer={\r\n        <>\r\n          <Button schema=\"secondary\" onClick={props.close}>\r\n            <X />\r\n            Close\r\n          </Button>\r\n\r\n          <Button onClick={onImport} disabled={!props.char}>\r\n            <Check />\r\n            Import\r\n          </Button>\r\n        </>\r\n      }\r\n    >\r\n      <Show when={!props.char}>\r\n        <div class=\"flex min-h-[12rem] w-full items-center justify-center\">\r\n          <Loading />\r\n        </div>\r\n      </Show>\r\n      <Show when={props.char}>\r\n        <form ref={ref}>\r\n          <div class=\"mb-2 text-sm\">\r\n            Optionally modify all the aspects of the character other than the avatar.\r\n          </div>\r\n          <div class=\"mb-4 text-sm\">\r\n            The information provided here will be saved with the character on import.\r\n          </div>\r\n\r\n          <Show when={props.char?.name}>\r\n            <TextInput\r\n              class=\"text-sm\"\r\n              fieldName=\"name\"\r\n              label=\"Character Name\"\r\n              helperText={\r\n                <span>\r\n                  Override the name of the character here <i>(Optional)</i>\r\n                </span>\r\n              }\r\n              value={char()?.name}\r\n              onChange={(e) => setChar({ ...char(), name: e.currentTarget.value })}\r\n            />\r\n            <TextInput\r\n              isMultiline\r\n              fieldName=\"greeting\"\r\n              label=\"Greeting\"\r\n              value={char()?.greeting}\r\n              class=\"text-xs\"\r\n              onKeyUp={(e) => setChar({ ...char(), greeting: e.currentTarget.value })}\r\n            />\r\n\r\n            <TextInput\r\n              isMultiline\r\n              fieldName=\"scenario\"\r\n              label=\"Scenario\"\r\n              value={char()?.scenario}\r\n              class=\"text-xs\"\r\n              onKeyUp={(e) => setChar({ ...char(), scenario: e.currentTarget.value })}\r\n            />\r\n\r\n            <TextInput\r\n              isMultiline\r\n              fieldName=\"sampleChat\"\r\n              label=\"Sample Chat\"\r\n              value={char()?.sampleChat}\r\n              class=\"text-xs\"\r\n              onKeyUp={(e) => setChar({ ...char(), sampleChat: e.currentTarget.value })}\r\n            />\r\n\r\n            <TextInput\r\n              isMultiline\r\n              fieldName=\"persona\"\r\n              label=\"Persona\"\r\n              value={char()?.persona.attributes.text[0]! || ''}\r\n              class=\"text-xs\"\r\n              onKeyUp={(e) => {\r\n                setChar({\r\n                  ...char(),\r\n                  persona: {\r\n                    kind: 'text',\r\n                    attributes: {\r\n                      text: [e.currentTarget.value],\r\n                    },\r\n                  },\r\n                })\r\n              }}\r\n            />\r\n          </Show>\r\n        </form>\r\n      </Show>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default ChubImportCharModal\r\n","import { Check, X } from 'lucide-solid'\r\nimport { Component, Show, createEffect, createSignal } from 'solid-js'\r\nimport Button from '../../shared/Button'\r\nimport Modal from '../../shared/Modal'\r\nimport { memoryStore, toastStore } from '../../store'\r\nimport EditMemoryForm, { EntrySort } from '../Memory/EditMemory'\r\nimport { AppSchema } from '/common/types'\r\nimport { Option } from '/web/shared/Select'\r\n\r\nconst ChubImportBookModal: Component<{\r\n  show: boolean\r\n  close: () => void\r\n  id?: string\r\n  book: AppSchema.MemoryBook\r\n  fullPath: string\r\n}> = (props) => {\r\n  let ref: any\r\n  const [book, setBook] = createSignal<AppSchema.MemoryBook>(props.book)\r\n  const [entrySort, setEntrySort] = createSignal<EntrySort>('creationDate')\r\n  const updateEntrySort = (item: Option<string>) => {\r\n    if (item.value === 'creationDate' || item.value === 'alpha') {\r\n      setEntrySort(item.value)\r\n    }\r\n  }\r\n\r\n  createEffect(() => {\r\n    if (props.book.name) setBook(props.book)\r\n  })\r\n\r\n  const onImport = () => {\r\n    try {\r\n      memoryStore.create(book())\r\n    } catch (error) {\r\n      toastStore.error(`Error importing ${book().name}! ${error}`)\r\n    }\r\n    props.close()\r\n  }\r\n\r\n  return (\r\n    <Modal\r\n      show={props.show}\r\n      close={props.close}\r\n      title={\r\n        <>\r\n          Preview\r\n          <a href={`https://chub.ai/${props.fullPath}`} class=\"text-[var(--hl-500)]\">\r\n            {' '}\r\n            {book()?.name}\r\n          </a>\r\n        </>\r\n      }\r\n      maxWidth=\"half\"\r\n      footer={\r\n        <>\r\n          <Button schema=\"secondary\" onClick={props.close}>\r\n            <X />\r\n            Close\r\n          </Button>\r\n\r\n          <Button onClick={onImport} disabled={!book()}>\r\n            <Check />\r\n            Import\r\n          </Button>\r\n        </>\r\n      }\r\n    >\r\n      <form ref={ref}>\r\n        <div class=\"mb-2 text-sm\">\r\n          Optionally modify all the aspects of the memory book other than the image.\r\n        </div>\r\n        <div class=\"mb-4 text-sm\">\r\n          The information provided here will be saved with the memory book on import.\r\n        </div>\r\n        <Show when={book().name}>\r\n          <div class=\"text-sm\">\r\n            <EditMemoryForm\r\n              hideSave\r\n              book={book()}\r\n              entrySort={entrySort()}\r\n              updateEntrySort={updateEntrySort}\r\n              onChange={setBook}\r\n            />\r\n          </div>\r\n        </Show>\r\n      </form>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default ChubImportBookModal\r\n"],"names":["Component","Show","createEffect","createMemo","createSignal","PageHeader","setComponentPageTitle","Tabs","FilterSettings","CharList","BookList","NewCharacter","AppSchema","ChubImportCharModal","ChubImportBookModal","useNavigate","useParams","chubTabs","characters","lorebooks","filter","Tab","Chub","params","nav","tabs","tab","setTab","charModal","setCharModal","char","fullPath","bookModal","setBookModal","book","MemoryBook","loading","setLoading","index","indexOf","currentTab","tabClass","_$createComponent","title","_el$","_tmpl$","cloneNode","_$insert","map","t","selected","select","_el$2","_tmpl$2","_el$3","firstChild","_el$4","nextSibling","_el$5","setChar","setBook","_$effect","_p$","_v$","_v$2","_v$3","_$className","undefined","_tmpl$3","when","children","show","close","TextInput","Toggle","Select","toDropdownItems","chubStore","sorts","state","update","setPage","getChars","getBooks","fieldName","label","helperText","value","nsfw","onChange","v","setNSFW","placeholder","tags","ev","setTags","currentTarget","excludeTags","setExcludeTags","items","sort","setSort","For","ChubItem","ChubNavigation","Loading","props","buttons","chars","length","charsLoading","each","slice","page","name","description","tagline","avatar","Array","extractCardData","processBook","processChar","jsonToCharacter","memorybook","setMemoryBook","processItem","_id","kind","userId","entries","file","json","Error","Object","assign","_el$6","_el$7","$$click","_$setAttribute","_$delegateEvents","CHUB_URL","headers","accept","body","format","version","res","fetch","JSON","stringify","method","blob","File","type","onMount","Button","ArrowLeft","ArrowRight","toastStore","onSearch","KeyboardEvent","target","Element","HTMLInputElement","HTMLTextAreaElement","setSearch","search","onKeyUp","schema","onClick","error","n","Number","isNaN","books","booksLoading","Check","X","Modal","characterStore","id","ref","onImport","createCharacter","maxWidth","footer","disabled","_ref$","_$use","_tmpl$4","e","isMultiline","greeting","scenario","sampleChat","persona","attributes","text","memoryStore","EditMemoryForm","EntrySort","Option","entrySort","setEntrySort","updateEntrySort","item","create","hideSave"],"version":3,"file":"Chub.1934d411.js.map"}