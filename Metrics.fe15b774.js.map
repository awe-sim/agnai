{"mappings":"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","sources":["web/pages/Admin/Metrics.tsx"],"sourcesContent":["import { Component, createSignal, onMount } from 'solid-js'\r\nimport Button from '../../shared/Button'\r\nimport { FormLabel } from '../../shared/FormLabel'\r\nimport PageHeader from '../../shared/PageHeader'\r\nimport { getStrictForm, setComponentPageTitle } from '../../shared/util'\r\nimport { adminStore } from '../../store'\r\nimport { Card } from '/web/shared/Card'\r\nimport TextInput from '/web/shared/TextInput'\r\nimport { ConfirmModal } from '/web/shared/Modal'\r\n\r\nconst MetricsPage: Component = () => {\r\n  let refForm: any\r\n\r\n  setComponentPageTitle('Metrics')\r\n  const state = adminStore()\r\n  const [refMsg, setRefMsg] = createSignal<any>()\r\n  const [confirm, setConfirm] = createSignal(false)\r\n\r\n  onMount(() => adminStore.getMetrics())\r\n\r\n  const sendAll = () => {\r\n    const { message } = getStrictForm(refForm, { message: 'string' })\r\n    adminStore.sendAll(message, () => {\r\n      refMsg().value = ''\r\n    })\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <PageHeader title=\"Metrics\" />\r\n      <div class=\"mb-4 flex gap-4\">\r\n        <Button onClick={adminStore.getMetrics}>Refresh</Button>\r\n      </div>\r\n\r\n      <div class=\"flex flex-col gap-2 text-xl\">\r\n        <FormLabel\r\n          fieldName=\"active\"\r\n          label=\"Online Users\"\r\n          helperText={state.metrics?.connected || '...'}\r\n        />\r\n\r\n        <FormLabel\r\n          fieldName=\"active\"\r\n          label=\"Max Online Users\"\r\n          helperText={state.metrics?.maxLiveCount || '...'}\r\n        />\r\n\r\n        <FormLabel\r\n          fieldName=\"totalUsers\"\r\n          label=\"Registered Users\"\r\n          helperText={state.metrics?.totalUsers || '...'}\r\n        />\r\n\r\n        <FormLabel fieldName=\"services\" label=\"Services\" helperText={state.metrics?.each.length} />\r\n\r\n        <Card>\r\n          <form ref={refForm}>\r\n            <FormLabel label=\"Message All Users\" />\r\n            <TextInput ref={setRefMsg} fieldName=\"message\" isMultiline />\r\n            <Button onClick={() => setConfirm(true)}>Send</Button>\r\n          </form>\r\n        </Card>\r\n      </div>\r\n\r\n      <ConfirmModal\r\n        show={confirm()}\r\n        close={() => setConfirm(false)}\r\n        confirm={sendAll}\r\n        message=\"Are you sure you wish to send a message to all users?\"\r\n      />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default MetricsPage\r\n"],"names":["Component","createSignal","onMount","Button","FormLabel","PageHeader","getStrictForm","setComponentPageTitle","adminStore","Card","TextInput","ConfirmModal","MetricsPage","refForm","state","refMsg","setRefMsg","confirm","setConfirm","getMetrics","sendAll","message","value","_$createComponent","title","_el$","_tmpl$","cloneNode","_$insert","onClick","children","_el$2","_tmpl$3","fieldName","label","helperText","metrics","connected","maxLiveCount","totalUsers","each","length","_el$3","_tmpl$2","_ref$","_$use","ref","isMultiline","show","close"],"version":3,"file":"Metrics.fe15b774.js.map"}