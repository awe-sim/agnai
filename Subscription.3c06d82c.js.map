{"mappings":"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","sources":["web/pages/Admin/Subscription.tsx"],"sourcesContent":["import { A, useNavigate, useParams, useSearchParams } from '@solidjs/router'\r\nimport { Edit, Plus, Save, X } from 'lucide-solid'\r\nimport { Component, createEffect, createMemo, createSignal, Match, Show, Switch } from 'solid-js'\r\nimport { defaultPresets, isDefaultPreset } from '../../../common/presets'\r\nimport { AppSchema } from '../../../common/types/schema'\r\nimport Button from '../../shared/Button'\r\nimport Select, { Option } from '../../shared/Select'\r\nimport GenerationSettings, {\r\n  getPresetFormData,\r\n  getRegisteredSettings,\r\n} from '../../shared/GenerationSettings'\r\nimport Modal, { ConfirmModal } from '../../shared/Modal'\r\nimport PageHeader from '../../shared/PageHeader'\r\nimport TextInput from '../../shared/TextInput'\r\nimport { getStrictForm, setComponentPageTitle } from '../../shared/util'\r\nimport { presetStore, settingStore, toastStore } from '../../store'\r\nimport { AIAdapter, AI_ADAPTERS } from '../../../common/adapters'\r\nimport Loading from '/web/shared/Loading'\r\nimport { Toggle } from '/web/shared/Toggle'\r\nimport { Card } from '/web/shared/Card'\r\nimport { useRootModal } from '/web/shared/hooks'\r\n\r\nconst tokenizers = [\r\n  { label: 'None', value: '' },\r\n  { label: 'Llama', value: 'llama' },\r\n  { label: 'Turbo', value: 'turbo' },\r\n  { label: 'DaVinci', value: 'davinci' },\r\n  { label: 'Novel Kayra', value: 'novel-modern' },\r\n  { label: 'Novel (Old)', value: 'novel' },\r\n  { label: 'Mistral', value: 'mistral' },\r\n  { label: 'Yi', value: 'yi' },\r\n  { label: 'Cohere', value: 'cohere' },\r\n]\r\n\r\nexport const Subscription: Component = () => {\r\n  const { updateTitle } = setComponentPageTitle('Subscription')\r\n  let ref: any\r\n\r\n  const params = useParams()\r\n  const [query] = useSearchParams()\r\n\r\n  const nav = useNavigate()\r\n  const [edit, setEdit] = createSignal(false)\r\n  const [editing, setEditing] = createSignal<AppSchema.SubscriptionPreset>()\r\n  const [deleting, setDeleting] = createSignal(false)\r\n  const [missingPlaceholder, setMissingPlaceholder] = createSignal<boolean>()\r\n  const [service, setService] = createSignal<AIAdapter>()\r\n  const [replacing, setReplacing] = createSignal(false)\r\n\r\n  const onEdit = (preset: AppSchema.SubscriptionPreset) => {\r\n    nav(`/admin/subscriptions/${preset._id}`)\r\n  }\r\n\r\n  const cfg = settingStore((s) => s.config)\r\n\r\n  const state = presetStore(({ subs, saving }) => ({\r\n    saving,\r\n    subs,\r\n    items: subs.map<Option>((p) => ({ label: p.name, value: p._id })),\r\n    editing: subs.find((pre) => pre._id === query.preset || params.id),\r\n  }))\r\n\r\n  createEffect(() => {\r\n    const inherit = editing()\r\n    const svc = service()\r\n\r\n    if (!inherit?.service || !!svc) return\r\n    setService(inherit.service)\r\n  })\r\n\r\n  createEffect(async () => {\r\n    if (params.id === 'new') {\r\n      const copySource = query.preset\r\n      if (copySource) {\r\n        updateTitle(`Copy subscription ${copySource}`)\r\n      } else {\r\n        updateTitle(`Create subscription`)\r\n      }\r\n      setEditing()\r\n      await Promise.resolve()\r\n      const template = isDefaultPreset(query.preset)\r\n        ? defaultPresets[query.preset]\r\n        : state.subs.find((p) => p._id === query.preset)\r\n      const preset = template ? { ...template } : { ...emptyPreset }\r\n      setEditing({\r\n        ...emptyPreset,\r\n        ...preset,\r\n        _id: '',\r\n        kind: 'subscription-setting',\r\n        subLevel: 0,\r\n        subModel: '',\r\n        subApiKey: '',\r\n        subDisabled: false,\r\n        allowGuestUsage: false,\r\n      })\r\n      return\r\n    } else if (params.id === 'default') {\r\n      setEditing()\r\n      await Promise.resolve()\r\n      if (!isDefaultPreset(query.preset)) return\r\n      setEditing({\r\n        ...emptyPreset,\r\n        ...defaultPresets[query.preset],\r\n        _id: '',\r\n        subLevel: 0,\r\n        subModel: '',\r\n        subApiKey: '',\r\n        subDisabled: false,\r\n        kind: 'subscription-setting',\r\n      })\r\n      return\r\n    }\r\n\r\n    const subscription = editing()\r\n\r\n    if (params.id && !subscription) {\r\n      const match = state.subs.find((p) => p._id === params.id)\r\n\r\n      if (!match) {\r\n        presetStore.getSubscriptions()\r\n      }\r\n\r\n      setEditing(match)\r\n      return\r\n    }\r\n\r\n    if (params.id && subscription && subscription._id !== params.id) {\r\n      setEditing()\r\n      await Promise.resolve()\r\n      const preset = state.subs.find((p) => p._id === params.id)\r\n      setEditing(preset)\r\n    }\r\n\r\n    if (params.id && subscription) {\r\n      updateTitle(`Edit subscription ${subscription.name}`)\r\n    }\r\n  })\r\n\r\n  const startNew = () => {\r\n    nav('/admin/subscriptions/new')\r\n  }\r\n\r\n  const deletePreset = () => {\r\n    const preset = editing()\r\n    if (!preset) return\r\n\r\n    presetStore.deleteSubscription(preset._id, () => nav('/admin/subscriptions'))\r\n  }\r\n\r\n  const onSave = (_ev: Event, force?: boolean) => {\r\n    if (state.saving) return\r\n    const validator = {\r\n      service: ['', ...AI_ADAPTERS],\r\n      subLevel: 'number',\r\n      subModel: 'string',\r\n      subServiceUrl: 'string',\r\n      subDisabled: 'boolean',\r\n      subApiKey: 'string',\r\n      isDefaultSub: 'boolean',\r\n      thirdPartyFormat: 'string?',\r\n      allowGuestUsage: 'boolean',\r\n      tokenizer: 'string?',\r\n      guidanceCapable: 'boolean?',\r\n    } as const\r\n\r\n    const presetData = getPresetFormData(ref)\r\n    const subData = getStrictForm(ref, validator)\r\n    const body = { ...presetData, ...subData }\r\n\r\n    body.thirdPartyFormat = body.thirdPartyFormat || (null as any)\r\n\r\n    if (!body.service) {\r\n      toastStore.error(`You must select an AI service before saving`)\r\n      return\r\n    }\r\n\r\n    if (body.openRouterModel) {\r\n      const actual = cfg.openRouter.models.find((or) => or.id === body.openRouterModel)\r\n      body.openRouterModel = actual || undefined\r\n    }\r\n\r\n    if (!force && body.gaslight && !body.gaslight.includes('{{personality}}')) {\r\n      setMissingPlaceholder(true)\r\n      return\r\n    }\r\n\r\n    const prev = editing()\r\n    const registered = getRegisteredSettings(body.service as AIAdapter, ref)\r\n    body.registered = { ...prev?.registered }\r\n    body.registered[body.service] = registered\r\n\r\n    if (prev?._id) {\r\n      presetStore.updateSubscription(prev._id, body as any)\r\n    } else {\r\n      presetStore.createSubscription(body as any, (newPreset) => {\r\n        nav(`/admin/subscriptions/${newPreset._id}`)\r\n      })\r\n    }\r\n    setMissingPlaceholder(false)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <PageHeader\r\n        title={\r\n          <A class=\"link\" href=\"/admin/subscriptions\">\r\n            Subscription\r\n          </A>\r\n        }\r\n      />\r\n      <Switch>\r\n        <Match when={params.id && params.id !== 'new' && !state.editing}>\r\n          <Loading />\r\n        </Match>\r\n        <Match when>\r\n          <div class=\"flex flex-col gap-2 pb-10\">\r\n            <div class=\"flex flex-col gap-4 p-2\">\r\n              <Show when={editing()}>\r\n                <form ref={ref} onSubmit={onSave} class=\"flex flex-col gap-4\">\r\n                  <div class=\"flex gap-4\">\r\n                    <Show when={state.subs.length > 1}>\r\n                      <Button onClick={() => setEdit(true)}>Load Preset</Button>\r\n                    </Show>\r\n                    <Button onClick={startNew}>\r\n                      <Plus />\r\n                      New Subscription\r\n                    </Button>\r\n                    <Button onClick={() => setReplacing(true)} schema=\"red\">\r\n                      Replace/Supercede\r\n                    </Button>\r\n                  </div>\r\n                  <div class=\"flex flex-col\">\r\n                    <div>ID: {editing()?._id || 'New Subscription'}</div>\r\n                    <TextInput\r\n                      fieldName=\"id\"\r\n                      value={editing()?._id || ''}\r\n                      disabled\r\n                      class=\"hidden\"\r\n                    />\r\n                    <TextInput\r\n                      fieldName=\"name\"\r\n                      label=\"Name\"\r\n                      helperText=\"A name or short description of your preset\"\r\n                      placeholder=\"E.g. Premium+++++\"\r\n                      value={editing()?.name}\r\n                      required\r\n                      parentClass=\"mb-2\"\r\n                    />\r\n\r\n                    <TextInput\r\n                      fieldName=\"subApiKey\"\r\n                      label=\"API Key\"\r\n                      helperText=\"(Optional) API Key for your AI service if applicable.\"\r\n                      placeholder={\r\n                        editing()?.subApiKeySet ? 'API Key is set' : 'API Key is not set'\r\n                      }\r\n                      type=\"password\"\r\n                      value={editing()?.subApiKey || ''}\r\n                      required\r\n                      parentClass=\"mb-2\"\r\n                    />\r\n\r\n                    <TextInput\r\n                      type=\"number\"\r\n                      fieldName=\"subLevel\"\r\n                      label=\"Subscription Level\"\r\n                      helperText='Anything above -1 requires a \"subscription\". All users by default are -1.'\r\n                      placeholder=\"0\"\r\n                      value={editing()?.subLevel ?? 0}\r\n                      required\r\n                    />\r\n\r\n                    <Card hide={service() !== 'agnaistic'} class=\"mt-4\">\r\n                      <TextInput\r\n                        fieldName=\"subModel\"\r\n                        label=\"Model\"\r\n                        helperText=\"Agnaistic service only\"\r\n                        placeholder=\"\"\r\n                        value={editing()?.subModel}\r\n                        required\r\n                        parentClass=\"mb-2\"\r\n                      />\r\n\r\n                      <TextInput\r\n                        fieldName=\"subServiceUrl\"\r\n                        label=\"Model Service URL\"\r\n                        helperText=\"Agnaistic service only\"\r\n                        placeholder=\"https://...\"\r\n                        value={editing()?.subServiceUrl}\r\n                        required\r\n                        parentClass=\"mb-2\"\r\n                      />\r\n\r\n                      <Toggle\r\n                        fieldName=\"guidanceCapable\"\r\n                        label=\"Guidance Capable\"\r\n                        helperText=\"Agnaistic service only\"\r\n                        value={editing()?.guidanceCapable}\r\n                      />\r\n                    </Card>\r\n\r\n                    <Card class=\"mt-4 flex flex-col gap-2\">\r\n                      <Toggle\r\n                        fieldName=\"subDisabled\"\r\n                        label=\"Subscription Disabled\"\r\n                        helperText=\"Disable the use of this subscription\"\r\n                        value={editing()?.subDisabled ?? false}\r\n                      />\r\n                      <Toggle\r\n                        fieldName=\"isDefaultSub\"\r\n                        label=\"Is Default Subscription\"\r\n                        helperText=\"Is chosen as fallback when no subscription is provided with a request\"\r\n                        value={editing()?.isDefaultSub ?? false}\r\n                      />\r\n\r\n                      <Toggle\r\n                        fieldName=\"allowGuestUsage\"\r\n                        label=\"Allow Guest Usage\"\r\n                        helperText={\r\n                          'Typically for default subscriptions. Require users to sign in to use this subscription.'\r\n                        }\r\n                        value={editing()?.allowGuestUsage === false ? false : true}\r\n                      />\r\n                    </Card>\r\n                  </div>\r\n\r\n                  <Select\r\n                    fieldName=\"tokenizer\"\r\n                    items={tokenizers}\r\n                    value={editing()?.tokenizer}\r\n                    label=\"Tokenizer Override\"\r\n                    helperText=\"Optional. For use with custom models.\"\r\n                  />\r\n\r\n                  <GenerationSettings\r\n                    inherit={editing()}\r\n                    disabled={params.id === 'default'}\r\n                    onService={setService}\r\n                    onSave={() => {}}\r\n                  />\r\n                  <div class=\"flex flex-row justify-end\">\r\n                    <Button disabled={state.saving} onClick={onSave}>\r\n                      <Save /> Save\r\n                    </Button>\r\n                  </div>\r\n                </form>\r\n              </Show>\r\n            </div>\r\n          </div>\r\n        </Match>\r\n      </Switch>\r\n\r\n      <EditPreset show={edit()} close={() => setEdit(false)} select={onEdit} />\r\n      <SupercedeModal show={replacing()} close={() => setReplacing(false)} />\r\n      <ConfirmModal\r\n        show={deleting()}\r\n        close={() => setDeleting(false)}\r\n        confirm={deletePreset}\r\n        message=\"Are you sure you wish to delete this preset?\"\r\n      />\r\n      <ConfirmModal\r\n        show={!!missingPlaceholder()}\r\n        close={() => setMissingPlaceholder(false)}\r\n        confirm={() => onSave(ref, true)}\r\n        message={\r\n          <div class=\"flex flex-col items-center gap-2 text-sm\">\r\n            <div>\r\n              Your gaslight is missing a <code>{'{{personality}}'}</code> placeholder. This is\r\n              almost never what you want. It is recommended for your gaslight to contain the\r\n              placeholders:\r\n              <br /> <code>{'{{personality}}, {{scenario}} and {{memory}}'}</code>\r\n            </div>\r\n\r\n            <p>Are you sure you wish to proceed?</p>\r\n          </div>\r\n        }\r\n      />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Subscription\r\n\r\nconst SupercedeModal: Component<{ show: boolean; close: () => void }> = (props) => {\r\n  let form: any\r\n\r\n  const params = useParams()\r\n  const nav = useNavigate()\r\n\r\n  const state = presetStore((s) => ({ subs: s.subs }))\r\n  const replacements = createMemo(() =>\r\n    state.subs\r\n      .filter((sub) => sub._id !== params.id)\r\n      .map((sub) => ({ label: `[${sub.subLevel}] ${sub.name}`, value: sub._id }))\r\n  )\r\n\r\n  const onSubmit = () => {\r\n    const subscriptionId = params.id\r\n    const { replacementId } = getStrictForm(form, { replacementId: 'string' })\r\n\r\n    presetStore.replaceSubscription(subscriptionId, replacementId, () => {\r\n      props.close()\r\n      nav(`/admin/subscriptions`)\r\n    })\r\n  }\r\n\r\n  const Footer = (\r\n    <>\r\n      <Button schema=\"secondary\" onClick={props.close}>\r\n        Cancel\r\n      </Button>\r\n      <Button schema=\"green\" onClick={onSubmit}>\r\n        Replace\r\n      </Button>\r\n    </>\r\n  )\r\n\r\n  useRootModal({\r\n    id: 'replace-subscription',\r\n    element: (\r\n      <Modal show={props.show} close={props.close} title=\"Replace Subscription\" footer={Footer}>\r\n        <form ref={form}>\r\n          <Select\r\n            items={replacements()}\r\n            fieldName=\"replacementId\"\r\n            label=\"Replacement Subscription\"\r\n            helperText=\"The subscription that will supercede the current subscription\"\r\n          />\r\n        </form>\r\n      </Modal>\r\n    ),\r\n  })\r\n\r\n  return null\r\n}\r\n\r\nconst emptyPreset: AppSchema.GenSettings = {\r\n  ...defaultPresets.basic,\r\n  ...defaultPresets.agnai,\r\n  name: '',\r\n  temp: 0.85,\r\n  topK: 0,\r\n  topP: 1,\r\n  tailFreeSampling: 0.95,\r\n  repetitionPenalty: 1.1,\r\n  repetitionPenaltyRange: 64,\r\n  maxContextLength: 4090,\r\n  maxTokens: 250,\r\n  streamResponse: true,\r\n}\r\n\r\nconst EditPreset: Component<{\r\n  show: boolean\r\n  close: () => void\r\n  select: (preset: AppSchema.SubscriptionPreset) => void\r\n}> = (props) => {\r\n  const params = useParams()\r\n\r\n  let ref: any\r\n  const state = presetStore()\r\n\r\n  const select = () => {\r\n    const body = getStrictForm(ref, { preset: 'string' })\r\n    const preset = state.subs.find((preset) => preset._id === body.preset)\r\n    props.select(preset!)\r\n    props.close()\r\n  }\r\n\r\n  return (\r\n    <Modal\r\n      show={props.show}\r\n      close={props.close}\r\n      title=\"Load Preset\"\r\n      footer={\r\n        <>\r\n          <Button schema=\"secondary\" onClick={props.close}>\r\n            <X /> Cancel\r\n          </Button>\r\n          <Button onClick={select}>\r\n            <Edit /> Load Preset\r\n          </Button>\r\n        </>\r\n      }\r\n    >\r\n      <form ref={ref}>\r\n        <Select\r\n          fieldName=\"preset\"\r\n          label=\"Preset\"\r\n          helperText=\"Select a preset to start editing. If you are currently editing a preset, it won't be in the list.\"\r\n          items={state.presets\r\n            .filter((pre) => pre._id !== params.id)\r\n            .map((pre) => ({ label: pre.name, value: pre._id }))}\r\n        />\r\n      </form>\r\n    </Modal>\r\n  )\r\n}\r\n"],"names":["A","useNavigate","useParams","useSearchParams","Edit","Plus","Save","X","Component","createEffect","createMemo","createSignal","Match","Show","Switch","defaultPresets","isDefaultPreset","AppSchema","Button","Select","Option","GenerationSettings","getPresetFormData","getRegisteredSettings","Modal","ConfirmModal","PageHeader","TextInput","getStrictForm","setComponentPageTitle","presetStore","settingStore","toastStore","AIAdapter","AI_ADAPTERS","Loading","Toggle","Card","useRootModal","tokenizers","label","value","Subscription","updateTitle","ref","params","query","nav","edit","setEdit","editing","setEditing","SubscriptionPreset","deleting","setDeleting","missingPlaceholder","setMissingPlaceholder","service","setService","replacing","setReplacing","onEdit","preset","_id","cfg","s","config","state","subs","saving","items","map","p","name","find","pre","id","inherit","svc","copySource","Promise","resolve","template","emptyPreset","kind","subLevel","subModel","subApiKey","subDisabled","allowGuestUsage","subscription","match","getSubscriptions","startNew","deletePreset","deleteSubscription","onSave","_ev","Event","force","validator","subServiceUrl","isDefaultSub","thirdPartyFormat","tokenizer","guidanceCapable","const","presetData","subData","body","error","openRouterModel","actual","openRouter","models","or","undefined","gaslight","includes","prev","registered","updateSubscription","createSubscription","newPreset","_$createComponent","title","href","children","when","_el$","_tmpl$2","cloneNode","_el$2","firstChild","_$insert","_el$3","_tmpl$","_el$4","_el$5","nextSibling","_el$6","_el$7","_el$8","addEventListener","_ref$","_$use","length","onClick","schema","fieldName","disabled","helperText","placeholder","required","parentClass","subApiKeySet","type","hide","onService","EditPreset","show","close","select","SupercedeModal","confirm","message","_tmpl$3","props","form","replacements","filter","sub","onSubmit","subscriptionId","replacementId","replaceSubscription","Footer","element","footer","_el$10","_tmpl$4","_ref$2","GenSettings","basic","agnai","temp","topK","topP","tailFreeSampling","repetitionPenalty","repetitionPenaltyRange","maxContextLength","maxTokens","streamResponse","_el$11","_ref$3","presets"],"version":3,"file":"Subscription.3c06d82c.js.map"}